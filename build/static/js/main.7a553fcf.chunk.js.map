{"version":3,"sources":["functions/typeColor.js","components/PokemonCard.jsx","components/PokemonInfo.jsx","functions/maxStatsValues.js","App.js","serviceWorker.js","index.js"],"names":["types","typeColor","type","PokemonCard","_ref","pokemon","onClick","react_default","a","createElement","className","src","sprites","front_default","alt","concat","id","name","map","item","index","key","style","background","PokemonInfo","hide","maxStats","_useState","useState","_useState2","Object","slicedToArray","desc","setDesc","barWidth","width","stats","base_stat","values","_useState3","_useState4","dupa","setDupa","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","result","descIndex","wrap","_context","prev","next","axios","get","sent","data","flavor_text_entries","findIndex","language","flavor_text","stop","apply","this","arguments","fetchData","height","weight","moves","slice","move","join","replace","split","keys","CSSTransition","in","timeout","classNames","maxStatsValues","obj","flatMap","x","forEach","stat","Math","max","App","search","setSearch","advancedSearch","setAdvancedSearch","_useState5","_useState6","setData","_useState7","_useState8","infoVisible","setInfoVisible","_useState9","_useState10","chosenPokemon","setChosenPokemon","_useState11","_useState12","headerHeight","setHeaderHeight","_useState13","_useState14","rotation","setRotation","_useState15","_useState16","scale","setScale","_useState17","Array","fill","_useState18","colored","setColored","newArray","Promise","all","placeholder","onChange","event","target","value","transform","i","toggleType","components_PokemonInfo","components_PokemonCard","showInfo","filter","sub","subIndex","every","val","includes","toString","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7a553fcf.chunk.js","sourcesContent":["export const types = [\r\n  'poison',\r\n  'grass',\r\n  'fire',\r\n  'flying',\r\n  'water',\r\n  'bug',\r\n  'normal',\r\n  'electric',\r\n  'ground',\r\n  'fairy',\r\n  'fighting',\r\n  'psychic',\r\n  'rock',\r\n  'steel',\r\n  'ice',\r\n  'ghost'\r\n];\r\nconst typeColor = type => {\r\n  switch (type) {\r\n    case 'poison':\r\n      return '#A343A0';\r\n    case 'grass':\r\n      return '#7ACB4E';\r\n    case 'fire':\r\n      return '#F17F2F';\r\n    case 'flying':\r\n      return '#A791F3';\r\n    case 'water':\r\n      return '#6290E9';\r\n    case 'bug':\r\n      return '#A6BB16';\r\n    case 'normal':\r\n      return '#A6A879';\r\n    case 'electric':\r\n      return '#FCCE2D';\r\n    case 'ground':\r\n      return '#E3C763';\r\n    case 'fairy':\r\n      return '#ED9AAE';\r\n    case 'fighting':\r\n      return '#C62C27';\r\n    case 'psychic':\r\n      return '#FF5189';\r\n    case 'rock':\r\n      return '#BB9E3D';\r\n    case 'steel':\r\n      return '#B8B8D0';\r\n    case 'ice':\r\n      return '#94DBD6';\r\n    case 'ghost':\r\n      return '#705894';\r\n    case 'dragon':\r\n      return '#6D33FF';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\nexport default typeColor;\r\n","import React from 'react';\r\nimport typeColor from 'functions/typeColor';\r\n\r\nconst PokemonCard = ({ pokemon, onClick }) => {\r\n  return (\r\n    <div className=\"pokemon\" onClick={onClick}>\r\n      <img\r\n        src={pokemon.sprites ? pokemon.sprites.front_default : ''}\r\n        alt={`Pokemon${pokemon.id + 1}`}\r\n        className=\"sprite\"\r\n      />\r\n      <h2>{pokemon.name}</h2>\r\n      <div className=\"pokemon-type\">\r\n        {pokemon.types.map((item, index) => (\r\n          <span key={index} className=\"type-span\" style={{ background: typeColor(item.type.name) }}>\r\n            {item.type.name}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport 'css/pokemoninfo.scss';\r\nimport axios from 'axios';\r\nimport { CSSTransition } from 'react-transition-group';\r\nconst PokemonInfo = ({ pokemon, hide, maxStats }) => {\r\n  const [desc, setDesc] = useState('');\r\n  const barWidth = index => {\r\n    let width = (pokemon.stats[index].base_stat * 100) / Object.values(maxStats)[index];\r\n    return `${width}`;\r\n  };\r\n  const [dupa, setDupa] = useState(false);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios.get(`http://pokeapi.co/api/v2/pokemon-species/${pokemon.id}`);\r\n      const descIndex = result.data.flavor_text_entries.findIndex(item => item.language.name === 'en');\r\n      setDesc(result.data.flavor_text_entries[descIndex].flavor_text);\r\n    }\r\n    fetchData();\r\n    setDupa(true);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"info-block\">\r\n      <div className=\"close-block\">\r\n        <i className=\"fas fa-times \" onClick={hide} />\r\n      </div>\r\n      <h1 className=\"pokemon-name\">{`${pokemon.name} # ${pokemon.id < 10 ? '00' : pokemon.id < 100 ? '0' : ''}${\r\n        pokemon.id\r\n      }`}</h1>\r\n      <div className=\"info-container\">\r\n        <div>\r\n          <img\r\n            src={pokemon.sprites ? pokemon.sprites.front_default : ''}\r\n            alt={`Pokemon${pokemon.id + 1}`}\r\n            className=\"sprite-info\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"pokemon-height-weight\">\r\n            <div>{`Height: ${pokemon.height / 10}m`}</div>\r\n            <div>{`Weight: ${pokemon.weight / 10}kg`}</div>\r\n          </div>\r\n          <div className=\"abilities\">\r\n            <h3>Abilities:</h3>\r\n            {pokemon.moves\r\n              .slice(0, 3)\r\n              .map(item => `${item.move.name} `)\r\n              .join('*')\r\n              .replace(/-/g, ' ')\r\n              .split('*')\r\n              .map((item, index) => (\r\n                <div key={index}>{item}</div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"stats-block\">\r\n          {Object.keys(maxStats).map((item, index) => (\r\n            <span key={index}>\r\n              <div>\r\n                <div className=\"stat-bar\" key={index}>\r\n                  <CSSTransition in={dupa} timeout={1000} classNames=\"my-node\">\r\n                    <span\r\n                      style={{\r\n                        width: `${barWidth(index)}%`,\r\n                        background: `hsl(${(barWidth(index) * 110) / 90}deg, 80%, 45%)`\r\n                      }}\r\n                    />\r\n                  </CSSTransition>\r\n                </div>\r\n                <div className=\"stat-name\">{item}</div>\r\n              </div>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"pokemon-description\">{desc && desc}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonInfo;\r\n","const maxStatsValues = data => {\r\n  let valueObject = {};\r\n  let obj = {};\r\n  valueObject = data.flatMap(x => x.stats);\r\n  valueObject.forEach(x => {\r\n    obj[x.stat.name] = Math.max(obj[x.stat.name] | 0, x.base_stat);\r\n  });\r\n  return obj;\r\n};\r\nexport default maxStatsValues;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'App.scss';\r\nimport 'css/header.scss';\r\nimport 'css/grid.scss';\r\nimport axios from 'axios';\r\nimport PokemonCard from 'components/PokemonCard.jsx';\r\nimport PokemonInfo from 'components/PokemonInfo';\r\nimport maxStatsValues from 'functions/maxStatsValues';\r\nimport typeColor, { types } from 'functions/typeColor';\r\n\r\nconst App = () => {\r\n  const [search, setSearch] = useState('');\r\n  const [advancedSearch, setAdvancedSearch] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [infoVisible, setInfoVisible] = useState(false);\r\n  const [chosenPokemon, setChosenPokemon] = useState(null);\r\n  const [headerHeight, setHeaderHeight] = useState(0);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [scale, setScale] = useState(0);\r\n  const [colored, setColored] = useState(Array(18).fill(false));\r\n  const newArray = new Array(151).fill(''); //only first generation of Pokemon\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await Promise.all(\r\n        newArray.map((item, index) => axios.get(`http://pokeapi.co/api/v2/pokemon/${index + 1}`))\r\n      );\r\n      setData(result.map(item => item.data));\r\n    }\r\n    fetchData();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const showInfo = index => {\r\n    setInfoVisible(!infoVisible);\r\n    setChosenPokemon(index);\r\n    setScale(1);\r\n  };\r\n\r\n  const hideInfo = () => {\r\n    setInfoVisible(false);\r\n    setScale(0);\r\n  };\r\n  const showAdvancedSearch = () => {\r\n    setAdvancedSearch(!advancedSearch);\r\n    headerHeight === 0 ? setHeaderHeight(80) : setHeaderHeight(0);\r\n    rotation === 0 ? setRotation(90) : setRotation(0);\r\n  };\r\n  const toggleType = index => {\r\n    setColored(colored.map((item, i) => (i === index ? !item : item)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"fixed-header\">\r\n        <div className=\"header-wrapper\">\r\n          <div className=\"logo-block\">\r\n            <img src=\"images/logo.png\" alt=\"\" className=\"logo\" />\r\n          </div>\r\n          <input\r\n            type=\"search\"\r\n            className=\"input\"\r\n            name=\"search\"\r\n            placeholder=\"Name or Number\"\r\n            onChange={event => setSearch(event.target.value)}\r\n          />\r\n          <span>\r\n            <i\r\n              className=\"fas fa-chevron-right\"\r\n              onClick={showAdvancedSearch}\r\n              style={{ transform: `rotate(${rotation}deg)` }}\r\n            />\r\n          </span>\r\n        </div>\r\n        <div className=\"type-block\" style={{ transform: `translateY(${headerHeight}px)` }}>\r\n          <div className=\"type-search\">\r\n            {types.map((item, index) => (\r\n              <span\r\n                key={index}\r\n                style={colored[index] ? { background: typeColor(types[index]) } : { background: '' }}\r\n                className=\"type-span\"\r\n                onClick={() => toggleType(index)}>\r\n                {item}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      {infoVisible && data[0] ? (\r\n        <PokemonInfo\r\n          pokemon={data[chosenPokemon]}\r\n          infoVisible={infoVisible}\r\n          maxStats={maxStatsValues(data)}\r\n          hide={hideInfo}\r\n          scale={scale}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      <div className=\"pokemon-grid\" style={{ transform: `translateY(${headerHeight}px)` }}>\r\n        {data[0]\r\n          ? data\r\n              .map((item, index) => <PokemonCard key={index} pokemon={data[index]} onClick={() => showInfo(index)} />)\r\n              .filter(\r\n                (item, index) =>\r\n                  (colored\r\n                    .map((sub, subIndex) => (sub === true ? types[subIndex] : false))\r\n                    .filter(sub => sub !== false)\r\n                    .every(val => data[index].types.map(sub => sub.type.name).includes(val)) &&\r\n                    data[index].name.search(search) !== -1) ||\r\n                  data[index].id.toString() === search\r\n              )\r\n          : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n//\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}