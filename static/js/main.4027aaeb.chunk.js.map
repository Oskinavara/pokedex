{"version":3,"sources":["components/Sprite.jsx","functions/typeColor.js","components/PokemonTypes.jsx","components/PokemonCard.jsx","components/PokemonInfo/PokemonName.jsx","components/PokemonInfo/Dimensions.jsx","components/PokemonInfo/Abilities.jsx","components/PokemonInfo/Stats.jsx","components/PokemonInfo/PokemonInfo.jsx","functions/maxStatsValues.js","components/Header/Input.jsx","components/Header/DropdownIcon.jsx","components/Header/Logo.jsx","components/Header/TypeButtons.jsx","components/Header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["Sprite","_ref","sprite","id","className","react_default","a","createElement","src","front_default","alt","concat","types","typeColor","type","PokemonTypes","map","item","index","key","style","background","name","PokemonCard","pokemon","onClick","components_Sprite","sprites","components_PokemonTypes","PokemonName","Dimensions","dimensions","height","weight","Abilities","abilities","slice","move","join","replace","split","Stats","maxStats","animationStart","barWidth","Object","keys","CSSTransition","in","timeout","classNames","width","PokemonInfo","hide","_useState","useState","_useState2","slicedToArray","desc","setDesc","_useState3","_useState4","setAnimationStart","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","result","descIndex","wrap","_context","prev","next","axios","get","sent","data","flavor_text_entries","findIndex","language","flavor_text","stop","apply","this","arguments","fetchData","PokemonInfo_PokemonName","PokemonInfo_Dimensions","PokemonInfo_Abilities","moves","PokemonInfo_Stats","stats","base_stat","values","maxStatsValues","obj","flatMap","x","forEach","stat","Math","max","Input","onChange","placeholder","DropdownIcon","showAdvancedSearch","rotation","transform","Logo","TypeButtons","headerHeight","colored","toggleType","Header","Header_Logo","Header_Input","Header_DropdownIcon","Header_TypeButtons","App","search","setSearch","advancedSearch","setAdvancedSearch","_useState5","_useState6","setData","_useState7","_useState8","infoVisible","setInfoVisible","_useState9","_useState10","chosenPokemon","setChosenPokemon","_useState11","_useState12","setHeaderHeight","_useState13","_useState14","setRotation","_useState15","_useState16","scale","setScale","_useState17","Array","fill","_useState18","setColored","newArray","Promise","all","components_Header_Header","event","target","value","i","components_PokemonInfo_PokemonInfo","components_PokemonCard","showInfo","filter","sub","subIndex","every","val","includes","toString","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4027aaeb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Sprite = ({ sprite, id, className }) => {\r\n  return <img src={sprite ? sprite.front_default : ''} alt={`Pokemon${id + 1}`} className={className} />;\r\n};\r\n\r\nexport default Sprite;\r\n","export const types = [\r\n  'poison',\r\n  'grass',\r\n  'fire',\r\n  'flying',\r\n  'water',\r\n  'bug',\r\n  'normal',\r\n  'electric',\r\n  'ground',\r\n  'fairy',\r\n  'fighting',\r\n  'psychic',\r\n  'rock',\r\n  'steel',\r\n  'ice',\r\n  'ghost'\r\n];\r\nconst typeColor = type => {\r\n  switch (type) {\r\n    case 'poison':\r\n      return '#A343A0';\r\n    case 'grass':\r\n      return '#7ACB4E';\r\n    case 'fire':\r\n      return '#F17F2F';\r\n    case 'flying':\r\n      return '#A791F3';\r\n    case 'water':\r\n      return '#6290E9';\r\n    case 'bug':\r\n      return '#A6BB16';\r\n    case 'normal':\r\n      return '#A6A879';\r\n    case 'electric':\r\n      return '#FCCE2D';\r\n    case 'ground':\r\n      return '#E3C763';\r\n    case 'fairy':\r\n      return '#ED9AAE';\r\n    case 'fighting':\r\n      return '#C62C27';\r\n    case 'psychic':\r\n      return '#FF5189';\r\n    case 'rock':\r\n      return '#BB9E3D';\r\n    case 'steel':\r\n      return '#B8B8D0';\r\n    case 'ice':\r\n      return '#94DBD6';\r\n    case 'ghost':\r\n      return '#705894';\r\n    case 'dragon':\r\n      return '#6D33FF';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\nexport default typeColor;\r\n","import React from 'react';\r\nimport typeColor from 'functions/typeColor';\r\n\r\nconst PokemonTypes = ({ types }) => {\r\n  return (\r\n    <div className=\"pokemon-type\">\r\n      {types.map((item, index) => (\r\n        <span key={index} className=\"type-span\" style={{ background: typeColor(item.type.name) }}>\r\n          {item.type.name}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonTypes;\r\n","import React from 'react';\r\nimport Sprite from './Sprite';\r\nimport PokemonTypes from './PokemonTypes';\r\n\r\nconst PokemonCard = ({ pokemon, onClick }) => {\r\n  return (\r\n    <div className=\"pokemon\" onClick={onClick}>\r\n      <Sprite sprite={pokemon.sprites} id={pokemon.id} className={'sprite'} />\r\n      <h2>{pokemon.name}</h2>\r\n      <PokemonTypes types={pokemon.types} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from 'react';\r\n\r\nconst PokemonName = ({ name, id }) => {\r\n  return <h1 className=\"pokemon-name\">{`${name} # ${id < 10 ? '00' : id < 100 ? '0' : ''}${id}`}</h1>;\r\n};\r\n\r\nexport default PokemonName;\r\n","import React from 'react';\r\n\r\nconst Dimensions = ({ dimensions }) => {\r\n  return (\r\n    <div className=\"pokemon-height-weight\">\r\n      <div>{`Height: ${dimensions.height / 10}m`}</div>\r\n      <div>{`Weight: ${dimensions.weight / 10}kg`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dimensions;\r\n","import React from 'react';\r\n\r\nconst Abilities = ({ abilities }) => {\r\n  return (\r\n    <div className=\"abilities\">\r\n      <h3>Abilities:</h3>\r\n      {abilities\r\n        .slice(0, 3)\r\n        .map(item => `${item.move.name} `)\r\n        .join('*')\r\n        .replace(/-/g, ' ')\r\n        .split('*')\r\n        .map((item, index) => (\r\n          <div key={index}>{item}</div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Abilities;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Stats = ({ maxStats, animationStart, barWidth }) => {\r\n  return (\r\n    <div className=\"stats-block\">\r\n      {Object.keys(maxStats).map((item, index) => (\r\n        <span key={index}>\r\n          <div>\r\n            <div className=\"stat-bar\" key={index}>\r\n              <CSSTransition in={animationStart} timeout={1000} classNames=\"my-node\">\r\n                <span\r\n                  style={{\r\n                    width: `${barWidth(index)}%`,\r\n                    background: `hsl(${(barWidth(index) * 110) / 90}deg, 80%, 45%)`\r\n                  }}\r\n                />\r\n              </CSSTransition>\r\n            </div>\r\n            <div className=\"stat-name\">{item}</div>\r\n          </div>\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { useEffect, useState } from 'react';\r\nimport 'css/pokemoninfo.scss';\r\nimport axios from 'axios';\r\nimport PokemonName from 'components/PokemonInfo/PokemonName';\r\nimport Sprite from '../Sprite';\r\nimport Dimensions from './Dimensions';\r\nimport Abilities from './Abilities';\r\nimport Stats from './Stats';\r\nconst PokemonInfo = ({ pokemon, hide, maxStats }) => {\r\n  const [desc, setDesc] = useState('');\r\n  const barWidth = index => {\r\n    let width = (pokemon.stats[index].base_stat * 100) / Object.values(maxStats)[index];\r\n    return `${width}`;\r\n  };\r\n  const [animationStart, setAnimationStart] = useState(false);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios.get(`http://pokeapi.co/api/v2/pokemon-species/${pokemon.id}`);\r\n      const descIndex = result.data.flavor_text_entries.findIndex(item => item.language.name === 'en');\r\n      setDesc(result.data.flavor_text_entries[descIndex].flavor_text);\r\n    }\r\n    fetchData();\r\n    setAnimationStart(true);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"info-block\">\r\n      <div className=\"close-block\">\r\n        <i className=\"fas fa-times\" onClick={hide} />\r\n      </div>\r\n      <PokemonName name={pokemon.name} id={pokemon.id} />\r\n      <div className=\"info-container\">\r\n        <Sprite sprite={pokemon.sprites} id={pokemon.id} className={'sprite-info'} />\r\n\r\n        <div>\r\n          <Dimensions dimensions={pokemon} />\r\n          <Abilities abilities={pokemon.moves} />\r\n        </div>\r\n        <Stats maxStats={maxStats} animationStart={animationStart} barWidth={barWidth} />\r\n      </div>\r\n      <div className=\"pokemon-description\">{desc ? desc : 'Loading...'}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonInfo;\r\n","const maxStatsValues = data => {\r\n  let valueObject = {};\r\n  let obj = {};\r\n  valueObject = data.flatMap(x => x.stats);\r\n  valueObject.forEach(x => {\r\n    obj[x.stat.name] = Math.max(obj[x.stat.name] | 0, x.base_stat);\r\n  });\r\n  return obj;\r\n};\r\nexport default maxStatsValues;\r\n","import React from 'react';\r\n\r\nconst Input = ({ onChange }) => {\r\n  return <input type=\"search\" className=\"input\" name=\"search\" placeholder=\"Name or Number\" onChange={onChange} />;\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst DropdownIcon = ({ showAdvancedSearch, rotation }) => {\r\n  return (\r\n    <span>\r\n      <i\r\n        className=\"fas fa-chevron-right\"\r\n        onClick={showAdvancedSearch}\r\n        style={{ transform: `rotate(${rotation}deg)` }}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default DropdownIcon;\r\n","import React from 'react';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo-block\">\r\n      <img src=\"images/logo.png\" alt=\"\" className=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport typeColor, { types } from 'functions/typeColor';\r\n\r\nconst TypeButtons = ({ headerHeight, colored, toggleType }) => {\r\n  return (\r\n    <div className=\"type-block\" style={{ transform: `translateY(${headerHeight}px)` }}>\r\n      <div className=\"type-search\">\r\n        {types.map((item, index) => (\r\n          <span\r\n            key={index}\r\n            style={colored[index] ? { background: typeColor(types[index]) } : {}}\r\n            className=\"type-span\"\r\n            onClick={() => toggleType(index)}>\r\n            {item}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypeButtons;\r\n","import React from 'react';\r\nimport Input from './Input';\r\nimport DropdownIcon from './DropdownIcon';\r\nimport Logo from './Logo';\r\nimport TypeButtons from './TypeButtons';\r\nconst Header = ({ onChange, showAdvancedSearch, toggleType, colored, rotation, headerHeight }) => {\r\n  return (\r\n    <header className=\"fixed-header\">\r\n      <div className=\"header-wrapper\">\r\n        <Logo />\r\n        <Input onChange={onChange} />\r\n        <DropdownIcon rotation={rotation} showAdvancedSearch={showAdvancedSearch} />\r\n      </div>\r\n      <TypeButtons headerHeight={headerHeight} colored={colored} toggleType={toggleType} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'App.scss';\r\nimport 'css/header.scss';\r\nimport 'css/grid.scss';\r\nimport axios from 'axios';\r\nimport PokemonCard from 'components/PokemonCard.jsx';\r\nimport PokemonInfo from 'components/PokemonInfo/PokemonInfo';\r\nimport maxStatsValues from 'functions/maxStatsValues';\r\nimport { types } from 'functions/typeColor';\r\nimport Header from './components/Header/Header';\r\n\r\nconst App = () => {\r\n  const [search, setSearch] = useState('');\r\n  const [advancedSearch, setAdvancedSearch] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [infoVisible, setInfoVisible] = useState(false);\r\n  const [chosenPokemon, setChosenPokemon] = useState(null);\r\n  const [headerHeight, setHeaderHeight] = useState(0);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [scale, setScale] = useState(0);\r\n  const [colored, setColored] = useState(Array(18).fill(false));\r\n  const newArray = new Array(151).fill(''); //only first generation of Pokemon\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await Promise.all(\r\n        newArray.map((item, index) => axios.get(`http://pokeapi.co/api/v2/pokemon/${index + 1}`))\r\n      );\r\n      setData(result.map(item => item.data));\r\n    }\r\n    fetchData();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const showInfo = index => {\r\n    setInfoVisible(!infoVisible);\r\n    setChosenPokemon(index);\r\n    setScale(1);\r\n  };\r\n\r\n  const hideInfo = () => {\r\n    setInfoVisible(false);\r\n    setScale(0);\r\n  };\r\n  const showAdvancedSearch = () => {\r\n    setAdvancedSearch(!advancedSearch);\r\n    headerHeight === 0 ? setHeaderHeight(80) : setHeaderHeight(0);\r\n    rotation === 0 ? setRotation(90) : setRotation(0);\r\n  };\r\n  const toggleType = index => {\r\n    setColored(colored.map((item, i) => (i === index ? !item : item)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n        onChange={event => setSearch(event.target.value)}\r\n        showAdvancedSearch={showAdvancedSearch}\r\n        toggleType={toggleType}\r\n        colored={colored}\r\n        rotation={rotation}\r\n        headerHeight={headerHeight}\r\n      />\r\n      {infoVisible && data[0] ? (\r\n        <PokemonInfo\r\n          pokemon={data[chosenPokemon]}\r\n          infoVisible={infoVisible}\r\n          maxStats={maxStatsValues(data)}\r\n          hide={hideInfo}\r\n          scale={scale}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      <div className=\"pokemon-grid\" style={{ transform: `translateY(${headerHeight}px)` }}>\r\n        {data[0]\r\n          ? data\r\n              .map((item, index) => <PokemonCard key={index} pokemon={data[index]} onClick={() => showInfo(index)} />)\r\n              .filter(\r\n                (item, index) =>\r\n                  (colored\r\n                    .map((sub, subIndex) => (sub === true ? types[subIndex] : false))\r\n                    .filter(sub => sub !== false)\r\n                    .every(val => data[index].types.map(sub => sub.type.name).includes(val)) &&\r\n                    data[index].name.search(search) !== -1) ||\r\n                  data[index].id.toString() === search\r\n              )\r\n          : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n//\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}