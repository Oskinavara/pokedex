{"version":3,"sources":["components/Sprite.jsx","functions/typeColor.js","components/PokemonTypes.jsx","components/PokemonCard.jsx","components/PokemonInfo/PokemonName.jsx","components/PokemonInfo/Stats.jsx","components/PokemonInfo/PokemonInfo.jsx","functions/maxStatsValues.js","components/Header/Input.jsx","components/Header/DropdownIcon.jsx","components/Header/Logo.jsx","components/Header/TypeButtons.jsx","components/Header/Header.jsx","components/Loading.jsx","App.js","serviceWorker.js","index.js"],"names":["Sprite","_ref","sprite","id","className","react_default","a","createElement","src","front_default","alt","concat","types","typeColor","type","PokemonTypes","map","item","index","key","style","background","name","PokemonCard","pokemon","onClick","components_Sprite","sprites","components_PokemonTypes","PokemonName","Stats","maxStats","barWidth","animationStart","Object","keys","CSSTransition","in","timeout","classNames","width","PokemonInfo","hide","description","_useState","useState","_useState2","slicedToArray","setAnimationStart","useEffect","PokemonInfo_PokemonName","height","weight","moves","slice","move","join","replace","split","PokemonInfo_Stats","stats","base_stat","values","maxStatsValues","data","obj","flatMap","x","forEach","stat","Math","max","Input","onChange","placeholder","DropdownIcon","showAdvancedSearch","rotation","transform","Logo","TypeButtons","colored","toggleType","translateY","transitionDelay","transition","transformOrigin","Header","Header_Logo","Header_Input","Header_DropdownIcon","Header_TypeButtons","Loading","App","search","setSearch","_useState3","_useState4","setData","_useState5","_useState6","infoVisible","setInfoVisible","_useState7","_useState8","chosenPokemon","setChosenPokemon","_useState9","_useState10","setTranslateY","_useState11","_useState12","setRotation","_useState13","_useState14","scale","setScale","_useState15","_useState16","desc","setDesc","_useState17","Array","fill","_useState18","setColored","newArray","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","result","descriptions","descIndex","wrap","_context","prev","next","Promise","all","axios","get","sent","flavor_text_entries","findIndex","item2","language","flavor_text","stop","apply","this","arguments","fetchData","components_Header_Header","event","target","value","window","innerWidth","i","components_PokemonInfo_PokemonInfo","components_PokemonCard","showInfo","filter","sub","subIndex","every","val","includes","toString","components_Loading","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.db1e69fd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Sprite = ({ sprite, id, className }) => {\r\n  return <img src={sprite.front_default} alt={`Pokemon${id + 1}`} className={className} />;\r\n};\r\n\r\nexport default Sprite;\r\n","export const types = [\r\n  'poison',\r\n  'grass',\r\n  'fire',\r\n  'flying',\r\n  'water',\r\n  'bug',\r\n  'normal',\r\n  'electric',\r\n  'ground',\r\n  'fairy',\r\n  'fighting',\r\n  'psychic',\r\n  'rock',\r\n  'steel',\r\n  'ice',\r\n  'ghost'\r\n];\r\nconst typeColor = type => {\r\n  switch (type) {\r\n    case 'poison':\r\n      return '#A343A0';\r\n    case 'grass':\r\n      return '#7ACB4E';\r\n    case 'fire':\r\n      return '#F17F2F';\r\n    case 'flying':\r\n      return '#A791F3';\r\n    case 'water':\r\n      return '#6290E9';\r\n    case 'bug':\r\n      return '#A6BB16';\r\n    case 'normal':\r\n      return '#A6A879';\r\n    case 'electric':\r\n      return '#FCCE2D';\r\n    case 'ground':\r\n      return '#E3C763';\r\n    case 'fairy':\r\n      return '#ED9AAE';\r\n    case 'fighting':\r\n      return '#C62C27';\r\n    case 'psychic':\r\n      return '#FF5189';\r\n    case 'rock':\r\n      return '#BB9E3D';\r\n    case 'steel':\r\n      return '#B8B8D0';\r\n    case 'ice':\r\n      return '#94DBD6';\r\n    case 'ghost':\r\n      return '#705894';\r\n    case 'dragon':\r\n      return '#6D33FF';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\nexport default typeColor;\r\n","import React from 'react';\r\nimport typeColor from 'functions/typeColor';\r\n\r\nconst PokemonTypes = ({ types }) => {\r\n  return (\r\n    <div className=\"pokemon-types\">\r\n      {types.map((item, index) => (\r\n        <span key={index} style={{ background: typeColor(item.type.name) }}>\r\n          {item.type.name}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonTypes;\r\n","import React from 'react';\r\nimport Sprite from './Sprite';\r\nimport PokemonTypes from './PokemonTypes';\r\n\r\nconst PokemonCard = ({ pokemon, onClick }) => {\r\n  return (\r\n    <div className=\"pokemon\" onClick={onClick}>\r\n      <Sprite sprite={pokemon.sprites} id={pokemon.id} className={'sprite'} />\r\n      <h2>{pokemon.name}</h2>\r\n      <PokemonTypes types={pokemon.types} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from 'react';\r\n\r\nconst PokemonName = ({ name, id }) => {\r\n  return <h1 className=\"pokemon-name\">{`${name} # ${id < 10 ? '00' : id < 100 ? '0' : ''}${id}`}</h1>;\r\n};\r\n\r\nexport default PokemonName;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Stats = ({ maxStats, barWidth, animationStart }) => {\r\n  return (\r\n    <div className=\"stats-block\">\r\n      {Object.keys(maxStats).map((item, index) => (\r\n        <div key={index}>\r\n          <div className=\"stat-bar\" key={index}>\r\n            <CSSTransition in={animationStart} timeout={1000} classNames=\"my-node\">\r\n              <span\r\n                style={{\r\n                  width: `${barWidth(index)}%`,\r\n                  background: `hsl(${(barWidth(index) * 110) / 90}deg, 80%, 45%)`\r\n                }}\r\n              />\r\n            </CSSTransition>\r\n          </div>\r\n          <h5>{item}</h5>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { useEffect, useState } from 'react';\r\nimport 'css/pokemoninfo.scss';\r\nimport PokemonName from 'components/PokemonInfo/PokemonName';\r\nimport Stats from './Stats';\r\nconst PokemonInfo = ({ pokemon, hide, maxStats, description }) => {\r\n  const barWidth = index => {\r\n    let width = (pokemon.stats[index].base_stat * 100) / Object.values(maxStats)[index];\r\n    return `${width}`;\r\n  };\r\n  const [animationStart, setAnimationStart] = useState(false);\r\n  useEffect(() => {\r\n    setAnimationStart(true);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"info-container\">\r\n      <div className=\"info-block\">\r\n        <div className=\"close-block\">\r\n          <i className=\"fas fa-times\" onClick={hide} />\r\n        </div>\r\n        <PokemonName name={pokemon.name} id={pokemon.id} />\r\n\r\n        <img\r\n          src={pokemon.sprites ? pokemon.sprites.front_default : ''}\r\n          alt={`Pokemon${pokemon.id + 1}`}\r\n          className={'sprite-info'}\r\n        />\r\n\r\n        <div className=\"feats\">\r\n          <h4>{`Height: ${pokemon.height / 10}m`}</h4>\r\n          <h4>{`Weight: ${pokemon.weight / 10}kg`}</h4>\r\n\r\n          <h3>Abilities:</h3>\r\n          {pokemon.moves\r\n            .slice(0, 3)\r\n            .map(item => `${item.move.name} `)\r\n            .join('*')\r\n            .replace(/-/g, ' ')\r\n            .split('*')\r\n            .map((item, index) => (\r\n              <h4 className=\"ability\" key={index}>\r\n                {item}\r\n              </h4>\r\n            ))}\r\n        </div>\r\n        <Stats maxStats={maxStats} animationStart={animationStart} barWidth={barWidth} />\r\n        <div className=\"pokemon-description\">\r\n          {/* <h3>{desc ? desc : 'Loading...'}</h3>\r\n           */}\r\n          <h3>{description}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonInfo;\r\n","const maxStatsValues = data => {\r\n  let valueObject = {};\r\n  let obj = {};\r\n  valueObject = data.flatMap(x => x.stats);\r\n  valueObject.forEach(x => {\r\n    obj[x.stat.name] = Math.max(obj[x.stat.name] | 0, x.base_stat);\r\n  });\r\n  return obj;\r\n};\r\nexport default maxStatsValues;\r\n","import React from 'react';\r\n\r\nconst Input = ({ onChange }) => {\r\n  return <input type=\"search\" className=\"input\" name=\"search\" placeholder=\"Name or Number\" onChange={onChange} />;\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst DropdownIcon = ({ showAdvancedSearch, rotation }) => {\r\n  return (\r\n    <span>\r\n      <i\r\n        className=\"fas fa-chevron-right\"\r\n        onClick={showAdvancedSearch}\r\n        style={{ transform: `rotate(${rotation}deg)` }}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default DropdownIcon;\r\n","import React from 'react';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo-block\">\r\n      <img src=\"images/logo.png\" alt=\"\" className=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport typeColor, { types } from 'functions/typeColor';\r\n\r\nconst TypeButtons = ({ colored, toggleType, translateY }) => {\r\n  return (\r\n    <div className=\"type-buttons__wrapper\" style={{ transform: `translateY(${translateY}px)` }}>\r\n      <div\r\n        className=\"type-buttons__cover\"\r\n        style={\r\n          translateY !== 0\r\n            ? { transform: `scaleY(0)` }\r\n            : { transform: `scaleY(1)`, transitionDelay: 0, transition: `transform 0.3s`, transformOrigin: `top` }\r\n        }\r\n      />\r\n      <div className=\"type-buttons\">\r\n        {types.map((item, index) => (\r\n          <span\r\n            key={index}\r\n            style={colored[index] ? { background: typeColor(types[index]) } : {}}\r\n            onClick={() => toggleType(index)}>\r\n            {item}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypeButtons;\r\n","import React from 'react';\r\nimport Input from './Input';\r\nimport DropdownIcon from './DropdownIcon';\r\nimport Logo from './Logo';\r\nimport TypeButtons from './TypeButtons';\r\nconst Header = ({ onChange, showAdvancedSearch, rotation, colored, toggleType, translateY }) => {\r\n  return (\r\n    <header className=\"fixed-header\">\r\n      <Logo />\r\n      <div>\r\n        <Input onChange={onChange} />\r\n        <DropdownIcon rotation={rotation} showAdvancedSearch={showAdvancedSearch} />\r\n      </div>\r\n      <TypeButtons colored={colored} toggleType={toggleType} translateY={translateY} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport 'css/loading.scss';\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"lds-roller\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'App.scss';\r\nimport 'css/header.scss';\r\nimport 'css/grid.scss';\r\nimport 'css/media.scss';\r\nimport axios from 'axios';\r\nimport PokemonCard from 'components/PokemonCard.jsx';\r\nimport PokemonInfo from 'components/PokemonInfo/PokemonInfo';\r\nimport maxStatsValues from 'functions/maxStatsValues';\r\nimport { types } from 'functions/typeColor';\r\nimport Header from './components/Header/Header';\r\nimport Loading from './components/Loading';\r\n\r\nconst App = () => {\r\n  const [search, setSearch] = useState('');\r\n  const [data, setData] = useState([]);\r\n  const [infoVisible, setInfoVisible] = useState(false);\r\n  const [chosenPokemon, setChosenPokemon] = useState(null);\r\n  const [translateY, setTranslateY] = useState(0);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [scale, setScale] = useState(0);\r\n  const [desc, setDesc] = useState([]);\r\n\r\n  const [colored, setColored] = useState(Array(18).fill(false));\r\n  const newArray = new Array(151).fill(''); //only first generation of Pokemon\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await Promise.all(\r\n        newArray.map((item, index) => axios.get(`https://pokeapi.co/api/v2/pokemon/${index + 1}`))\r\n      );\r\n      const descriptions = await Promise.all(\r\n        newArray.map((item, index) => axios.get(`https://pokeapi.co/api/v2/pokemon-species/${index + 1}`))\r\n      );\r\n      const descIndex = descriptions.map(item =>\r\n        item.data.flavor_text_entries.findIndex(item2 => item2.language.name === 'en')\r\n      );\r\n      setDesc(descriptions.map((item, index) => item.data.flavor_text_entries[descIndex[index]].flavor_text));\r\n\r\n      // const descIndex = descriptions.map(item=>item.data.flavor_text_entries.findIndex(item2=>item2.language.name === 'en');\r\n      setData(result.map(item => item.data));\r\n      // setDesc(descriptions.data.flavor_text_entries[descIndex].flavor_text);\r\n    }\r\n\r\n    fetchData();\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const showInfo = index => {\r\n    setInfoVisible(!infoVisible);\r\n    setChosenPokemon(index);\r\n    setScale(1);\r\n  };\r\n\r\n  const hideInfo = () => {\r\n    setInfoVisible(false);\r\n    setScale(0);\r\n  };\r\n  const showAdvancedSearch = () => {\r\n    if (translateY !== 0) {\r\n      setTranslateY(0);\r\n    } else window.innerWidth > 660 ? setTranslateY(65) : setTranslateY(120);\r\n    rotation === 0 ? setRotation(90) : setRotation(0);\r\n  };\r\n  const toggleType = index => {\r\n    setColored(colored.map((item, i) => (i === index ? !item : item)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n        onChange={event => setSearch(event.target.value)}\r\n        showAdvancedSearch={showAdvancedSearch}\r\n        toggleType={toggleType}\r\n        colored={colored}\r\n        rotation={rotation}\r\n        translateY={translateY}\r\n      />\r\n\r\n      {infoVisible && data[0] ? (\r\n        <PokemonInfo\r\n          pokemon={data[chosenPokemon]}\r\n          infoVisible={infoVisible}\r\n          maxStats={maxStatsValues(data)}\r\n          hide={hideInfo}\r\n          scale={scale}\r\n          description={desc[chosenPokemon]}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      <div className=\"pokemon-grid\" style={{ transform: `translateY(${translateY}px)` }}>\r\n        {data[0] ? (\r\n          data\r\n            .map((item, index) => <PokemonCard key={index} pokemon={data[index]} onClick={() => showInfo(index)} />)\r\n            .filter(\r\n              (item, index) =>\r\n                (colored\r\n                  .map((sub, subIndex) => (sub === true ? types[subIndex] : false))\r\n                  .filter(sub => sub !== false)\r\n                  .every(val => data[index].types.map(sub => sub.type.name).includes(val)) &&\r\n                  data[index].name.search(search) !== -1) ||\r\n                data[index].id.toString() === search\r\n            )\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n//\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}